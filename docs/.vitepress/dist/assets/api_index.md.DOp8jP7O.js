import{_ as i,c as e,a,a2 as s,o as t}from"./chunks/framework.45A7nQBg.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),l={name:"api/index.md"},n=s('<h2 id="web-assembly-version-of-dggrid" tabindex="-1">Web Assembly version of DGGRID <a class="header-anchor" href="#web-assembly-version-of-dggrid" aria-label="Permalink to &quot;Web Assembly version of DGGRID&quot;">​</a></h2><p>A wrapper for DGGRID in Web Assembly. Based on last DGGRID c++ library developed by Dr. Kevin</p><div align="center"><p><img src="https://img.shields.io/npm/v/webdggrid?style=flat-square" alt="NPM Version"><img src="https://img.shields.io/github/actions/workflow/status/am2222/webDggrid/deploy.yml?style=flat-square&amp;label=docs" alt="GitHub Actions Workflow Status"> <img src="https://img.shields.io/github/actions/workflow/status/am2222/webDggrid/main.yml?style=flat-square&amp;label=npm%20pacakge" alt="GitHub Actions Workflow Status"> <a href="https://www.jsdelivr.com/package/npm/webdggrid" target="_blank" rel="noreferrer"><img src="https://data.jsdelivr.com/v1/package/npm/webdggrid/badge" alt=""></a></p></div><p align="center"><img src="https://github.com/am2222/pydggrid/blob/master/docs/L6kmP.jpg?raw=true" alt="SPyDGGRID"></p>',4),r=s(`<h2 id="how-to-use" tabindex="-1">How to use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to use&quot;">​</a></h2><p>Please check <code>tests</code> folder for more examples.</p><p>in browser</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WebdggridLocal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../dist/index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m.Webdggrid).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.log);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Webdggrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebdggridExternal } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://cdn.jsdelivr.net/npm/webDggrid/dist/index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Webdggrid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebdggridLocal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">??</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebdggridExternal;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> webdggrid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Webdggrid.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> seqNum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dggs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geoToSequenceNum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]);</span></span></code></pre></div><p>In nodejs</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Webdggrid } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;webdggrid&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dggs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Webdggrid.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> seqNum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dggs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">geoToSequenceNum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]);</span></span></code></pre></div><h2 id="supported-functions" tabindex="-1">Supported Functions <a class="header-anchor" href="#supported-functions" aria-label="Permalink to &quot;Supported Functions&quot;">​</a></h2><p><strong>Grid Creation</strong></p><ul><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#setDggs" target="_blank" rel="noreferrer">setDggs</a></li><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#getResolution" target="_blank" rel="noreferrer">getResolution</a></li><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#setResolution" target="_blank" rel="noreferrer">setResolution</a></li></ul><p><strong>Grid Statistics</strong></p><ul><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#cellAreaKM" target="_blank" rel="noreferrer">cellAreaKM</a></li><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#cellDistKM" target="_blank" rel="noreferrer">cellDistKM</a></li><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#nCells" target="_blank" rel="noreferrer">nCells</a></li></ul><p><strong>Grid Conversions</strong></p><ul><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#geoToGeo" target="_blank" rel="noreferrer">geoToGeo</a></li><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#geoToSequenceNum" target="_blank" rel="noreferrer">geoToSequenceNum</a></li><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#sequenceNumToGeo" target="_blank" rel="noreferrer">sequenceNumToGeo</a></li><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#sequenceNumToGridFeatureCollection" target="_blank" rel="noreferrer">sequenceNumToGridFeatureCollection</a></li><li><a href="https://am2222.github.io/webDggrid/api/classes/Webdggrid.html#sequenceNumToGrid" target="_blank" rel="noreferrer">sequenceNumToGrid</a></li></ul><h2 id="changes" tabindex="-1">Changes <a class="header-anchor" href="#changes" aria-label="Permalink to &quot;Changes&quot;">​</a></h2><p>Slow development pace.</p><p><strong>1.0.5</strong></p><ul><li>Added support to <code>SeqNumGrid</code></li></ul><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><p>Make sure to setup <code>emscripten</code> on your machine.</p><p>The development process involves modifying the <code>cpp</code> code and use <code>utils/make.js</code> to build the library.</p><table><thead><tr><th>Folder</th><th style="text-align:center;">Desc</th></tr></thead><tbody><tr><td>src-cpp</td><td style="text-align:center;">The src file of the DGGRID. It is inspired from DGGRIDR project.</td></tr><tr><td>src-ts</td><td style="text-align:center;">The src file js wrapper around the <code>emscripten</code> code to make it easier to interact with library in more <code>js</code> friendly approach.</td></tr><tr><td>lib-wasm</td><td style="text-align:center;">The js output that <code>emscripten</code> generates</td></tr><tr><td>lib-wasm-py</td><td style="text-align:center;">experimental python wrapper</td></tr><tr><td>tests</td><td style="text-align:center;">JS unit tests</td></tr></tbody></table><p>To build the entire library simply run <code>yarn build</code></p><p>It will build webassembly file and also builds the typescript wrapper.</p><h3 id="server-the-emscripten-output-just-for-development-purpuse" tabindex="-1">Server the emscripten output [just for development purpuse] <a class="header-anchor" href="#server-the-emscripten-output-just-for-development-purpuse" aria-label="Permalink to &quot;Server the emscripten output [just for development purpuse]&quot;">​</a></h3><p>Run the following command. It will open the emscripten&#39;s default page to test the wasm file. Just navigate to <code>libdggrid.html</code><code>yarn serve </code></p><p>you can invoke the functions similar to</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Module.DgGEO_to_SEQNUM(0,0,0,4,10,&#39;HEXAGON&#39;,&#39;ISEA&#39;,[0],[0])</span></span>
<span class="line"><span>\`\`</span></span></code></pre></div>`,27);function h(p,d,o,g,k,c){return t(),e("div",null,[n,a(" ------------ "),r])}const b=i(l,[["render",h]]);export{m as __pageData,b as default};
